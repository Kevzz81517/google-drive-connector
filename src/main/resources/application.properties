app.google-services.client.auth.code-redirection-host=http://localhost:8080
app.google-services.client.auth.code-redirection-uri=/authorization/submit
#app.google-services.client.credentials.path=

# Secret to convert user id to the the JWT token,
# to restrict the redirection only using the generated JWT
# The JWT is sent in the authorization link which is again sent back in the redirection
# where the JWT signature is matched
app.google-services.client.authorization.state.secret-key=DO$bc]-]CRB:jB_UPm1ZMJrhJ]CRB:jB_UP

# Host requires to be HTTPS (with valid certificate) [ngrock can be used for reverse proxy]
# E.g. app.google-services.client.file-event.webhook-host=https://75af-122-169-106-231.ngrok.io
#app.google-services.client.file-event.webhook-host=

app.google-services.client.file-event-processing.batch.size=10

app.google-services.client.file-event-processing.lock.time-period=300000

app.google-services.client.file-event-processing.new.log-file-location=new-file-event.json

app.google-services.client.file-event.webhook-uri=/event/change

# Path where the files will be stored, default /data
app.data.storage.root-path=data

# Database properties
spring.datasource.url=jdbc:h2:mem:google-drive-connector
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=kle94d#$^ksd
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.h2.console.enabled=true

